rm -rf autom4te.cache build/
 rm configure config.* Makefile src/Makefile src/jupiter
 mv configure.scan configure.ac
#!/bin/sh
autoconf --install
automake --add-missing --copy >/dev/null 2>&1



----update makefile.in---
$ sh autogen.sh
run sh autogen.sh created 2 files: config.h.in and install-sh
So we see config.h.in been created means autoreconf has executed autoheader.  2-- install-sh executed automake  to created install.sh
Anythings provided /generated by Autotoos should be copied to archive directory so can be shipped to end user
./configure 
-------./config.status  --help----
  --generate config.h--- by $./config.status config.h 
-----
create test ex file L configure.ac
-----
#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ([2.69])
AC_INIT([test], [1.0], [jupiterbugreport@example.org])
AC_CONFIG_COMMANDS([abc],
	           [echo "Testing $mypkgname"],
		   [mypkgname=$PACKAGE_nAME])
AC_OUTPUT
==============================================
run
 autoreonf... ./configure .... ./config.stats ...../config.status abc
./config.status --help
---------------------------screen shot
lshi@lshi-Ubuntu16:~/projects/jupiter_vpath/jupiter$ ./configure 
configure: creating ./config.status
config.status: executing abc commands
Testing test
lshi@lshi-Ubuntu16:~/projects/jupiter_vpath/jupiter$ ./config.status 
config.status: executing abc commands
Testing test
-------------------------------------------
Summay about  instanitiating macro
1) config.status script generates all files from templetes
2) configure script performs all checks and executes config.status
3) When run config.status wiht no cmd option, it generate file based on last set of check
results

4) you can call config.status to execut file generation or commands sets specified by any
of tags given in any of instantiating macro calles
5) config.status may generate file not associated wiht any tags specifed in configure.ac.
in which it 'll substitude var based on last set of checks performed.

-------------------------------------------



-----------------------------------

#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ([2.69])
AC_INIT([test], [1.0])
AC_CONFIG_COMMANDS([ls],
	           [echo "Testing $mypkgname"],
		   [mypkgname=$PACKAGE_NAME])
AC_OUTPUT
			
 ---create templete header file called config.h
=== Using autheader to Generate an include file Templete=====
 rm config.h.in    autoheader   autoconfi  ./configure cat config.h
 it generate a entire set of preprocessor definitions was derived from configure.ac by autoheader
Add Checklib in configure.ac will triger the target lib been added in LIBS var
gcc -I. -I. -I.. -DHAVE_CONFIG_H  -g -O2 -o jupiter main.c  -ldl -lpthread  
==============================
